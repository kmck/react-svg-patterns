{"version":3,"sources":["../../src/constants.ts","../../src/utils.ts","../../src/version.ts","../../src/GradientStop.tsx","../../src/LinearGradient.tsx","../../src/RadialGradient.tsx","../../src/AngularGradient.tsx","../../src/BackgroundImage.tsx","../../src/CustomSvgPattern.tsx","../../src/NoopAnimationHack.tsx","../../src/SvgPatternManager.ts","../../src/SvgPatternLibrary.tsx","../../src/createManagedSvgPatternLibrary.tsx","SvgPatternPreview.jsx","DemoPatternEditor.js","GithubCorner.jsx","App.js","index.js"],"names":["SPREAD_METHOD_PAD","SPREAD_METHOD_REFLECT","SPREAD_METHOD_REPEAT","DEGREES_TO_RADIANS","Math","PI","safeHexRgb","color","e","red","green","blue","alpha","sanitizeKey","key","replace","sortBy","arr","sort","a","b","mixColors","color1","color2","amount","r1","g1","b1","a1","r2","g2","b2","a2","w","aDiff","w2","w1","r","round","g","createAngularGradientPolygons","angle","stops","scale","spreadMethod","slices","getColor","sortedColors","firstStop","lastStop","length","sortedColorsLength","findLeftStop","offset","i","findRightStop","cache","Map","has","get","abs","floor","leftStop","rightStop","set","createGetColor","numPoints","ceil","pointDistance","Array","fill","map","_0","slice","start","points","sin","cos","angleToPoint","point","join","processStops","wasProcessed","numStops","processedStops","stop","num","stopColor","from","id","to","gradientStops","radians","x","y","xl","max","xr","yl","yr","xo","yo","x1","x2","y1","y2","stopProps","cx","cy","fx","fy","polygons","height","patternUnits","patternContentUnits","width","src","xlinkHref","children","UA","window","navigator","userAgent","test","needsAnimationHack","attributeName","attributeType","type","dur","repeatCount","idPrefix","patterns","listeners","subscribe","listener","Symbol","delete","add","params","patternKey","props","pattern","dispatch","undefined","remove","getPatterns","entries","this","forEach","noSvgWrapper","renderedPatterns","Object","style","bottom","opacity","pointerEvents","position","right","zIndex","svgPatternIndex","SvgPatternPreview","localPatternId","useMemo","random","toString","substr","useState","local","setLocal","handleClick","useCallback","value","onClick","preserveAspectRatio","viewBox","EXAMPLE_KEYS","EXAMPLE_TYPE","EXAMPLE_LABELS","linear","radial","angular","image","custom","EXAMPLE_OPTIONS","unwrapSvgElement","findSvgElement","node","tagName","find","childNode","findSvgRoot","svgElement","evaluateWithId","globals","document","globalThis","console","alert","fetch","XMLHttpRequest","globalKeys","keys","globalValues","processValue","match","expression","trim","Function","error","processExpression","processNode","srcNode","properties","createSvgGroup","processedValue","lastValue","rehype","use","processSync","dangerouslySetInnerHTML","__html","reducer","state","action","payload","exampleOptions","options","optionsValue","JSON5","stringify","parse","styled","className","onSetPatternId","registerSvgPattern","useReducer","setFill","codeSample","optionsString","typeString","split","line","handleTypeChange","currentTarget","handleOptionsEditorChange","useEffect","patternId","aceTheme","aceEditorProps","$blockScrolling","aceOptions","showLineNumbers","tabSize","showPrintMargin","useSoftTabs","useWorker","onChange","editorProps","mode","name","setOptions","theme","readOnly","backgroundFill","foregroundFill","xmlns","d","transformOrigin","GlobalStyle","createGlobalStyle","reset","patternManagerOrId","patternManager","useSvgPattern","explicitKey","setPattern","ManagedSvgPatternLibrary","setPatterns","unsubscribe","getSvgPattern","createManagedSvgPatternLibrary","handleSetPatternId","href","target","Date","getFullYear","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e081ddc5.chunk.js","sourcesContent":["export const PATTERN_TYPE_LINEAR_GRADIENT = 'linear';\nexport const PATTERN_TYPE_RADIAL_GRADIENT = 'radial';\nexport const PATTERN_TYPE_ANGULAR_GRADIENT = 'angular';\nexport const PATTERN_TYPE_IMAGE = 'image';\nexport const PATTERN_TYPE_CUSTOM = 'custom';\n\nexport const SPREAD_METHOD_PAD = 'pad';\nexport const SPREAD_METHOD_REFLECT = 'reflect';\nexport const SPREAD_METHOD_REPEAT = 'repeat';\n\nexport const DEGREES_TO_RADIANS = Math.PI / 180;\n","import rgbHex from 'rgb-hex';\nimport hexRgb from 'hex-rgb';\n\nimport {\n  GradientColor,\n  GradientStops,\n  SpreadMethod,\n  UnprocessedGradientStops,\n} from './types';\n\nimport {\n  DEGREES_TO_RADIANS,\n  SPREAD_METHOD_PAD,\n  SPREAD_METHOD_REFLECT,\n  SPREAD_METHOD_REPEAT,\n} from './constants';\n\nfunction safeHexRgb(color: string) {\n  try {\n    return hexRgb(color);\n  } catch (e) {\n    return {\n      red: 0,\n      green: 0,\n      blue: 0,\n      alpha: 0,\n    };\n  }\n}\n\nexport const sanitizeKey = (key: string) => key.replace(/\\s/g, '-');\nexport const forcePercent = (num: number | string) => (typeof num === 'number' ? `${num * 100}%` : num);\nexport function sortBy<T>(arr: Array<T>, key: string): T[] {\n  function comparator(a: { [key: string]: any }, b: { [key: string]: any }) {\n    if (a[key] > b[key]) {\n      return 1;\n    }\n    if (a[key] < b[key]) {\n      return -1;\n    }\n    return 0;\n  }\n  return [...arr].sort(comparator);\n}\n\nexport function angleToPoint(angle: number): [number, number] {\n  const x = 0.5 + Math.sin(angle * DEGREES_TO_RADIANS);\n  const y = 0.5 - Math.cos(angle * DEGREES_TO_RADIANS);\n  return [x, y];\n}\n\nexport function mixColors(\n  color1: string,\n  color2: string,\n  amount: number = 0.5,\n) {\n  const { red: r1, green: g1, blue: b1, alpha: a1 } = safeHexRgb(color1);\n  const { red: r2, green: g2, blue: b2, alpha: a2 } = safeHexRgb(color2);\n\n  const w = (2 * amount) - 1;\n  const aDiff = a2 - a1;\n\n  const w2 = ((w * aDiff === -1 ? w : (w + aDiff) / (1 + w * aDiff)) + 1) / 2.0;\n  const w1 = 1 - w2;\n\n  const r = Math.round(w1 * r1 + w2 * r2);\n  const g = Math.round(w1 * g1 + w2 * g2);\n  const b = Math.round(w1 * b1 + w2 * b2);\n  const a = (a1 * amount) + (a2 * (1 - amount));\n\n  return `#${a < 1 ? rgbHex(r, g, b, a) : rgbHex(r, g, b)}`;\n}\n\nexport function createGetColor(\n  stops: GradientStops,\n  scale: number = 1,\n  spreadMethod: SpreadMethod = SPREAD_METHOD_PAD,\n) {\n  const sortedColors = sortBy(stops, 'offset');\n  const firstStop = sortedColors[0];\n  const lastStop = sortedColors[sortedColors.length - 1];\n  const sortedColorsLength = sortedColors.length;\n  const findLeftStop = (offset: number) => {\n    for (let i = sortedColorsLength - 1; i >= 0; i -= 1) {\n      if (offset >= sortedColors[i].offset) {\n        return sortedColors[i];\n      }\n    }\n    return undefined;\n  };\n  const findRightStop = (offset: number) => {\n    for (let i = 0; i < sortedColorsLength; i += 1) {\n      if (offset <= sortedColors[i].offset) {\n        return sortedColors[i];\n      }\n    }\n    return undefined;\n  };\n\n  const cache = new Map<number, GradientColor>();\n\n  return (offset: number): GradientColor => {\n    if (cache.has(offset)) {\n      return cache.get(offset) as GradientColor;\n    }\n\n    let i = offset / scale;\n    if (i < 0 || i > 1) {\n      switch (spreadMethod) {\n        case SPREAD_METHOD_REFLECT:\n          i = Math.abs(i) % 2;\n          if (Math.floor(i) === 1) {\n            i = -i;\n          }\n          i %= 1;\n          if (i < 0) {\n            i += 1;\n          }\n          break;\n        case SPREAD_METHOD_REPEAT:\n          if (i !== 0) {\n            i %= 1;\n          }\n          if (i <= 0 && offset) {\n            i += 1;\n          }\n          break;\n        case SPREAD_METHOD_PAD:\n        default:\n          break;\n      }\n    }\n    [].find\n    const leftStop = findLeftStop(i) || firstStop;\n    const rightStop = findRightStop(i) || lastStop;\n    const amount = (rightStop.offset !== leftStop.offset)\n      ? (i - leftStop.offset) / (rightStop.offset - leftStop.offset)\n      : 1;\n    const color = mixColors(leftStop.color, rightStop.color, amount);\n    cache.set(offset, color);\n    return color;\n  };\n}\n\nexport function createAngularGradientPolygons(\n  angle: number,\n  stops: GradientStops,\n  scale: number,\n  spreadMethod: SpreadMethod,\n  slices: number,\n) {\n  const getColor = createGetColor(stops, scale, spreadMethod);\n  const numPoints = Math.ceil(8 / slices);\n  const pointDistance = 1 / slices / numPoints;\n  return (new Array(slices)).fill(0)\n    .map((_0, slice: number) => {\n      const color = getColor(slices > 1 ? slice / (slices - 1) : 0);\n      const start = slice / slices;\n      const pointsForSlice = slice === slices - 1 ? numPoints + 2 : numPoints + 3\n      const points: ([number, number])[] = (new Array(pointsForSlice)).fill(0)\n        .map((_0, i) => {\n          if (!i) {\n            return [0.5, 0.5];\n          }\n          const offset = pointDistance * (i - 1);\n          return angleToPoint((360 * (start + offset)) + angle);\n        });\n      return {\n        key: start,\n        fill: color,\n        points: points.map(point => point.join(',')).join(' '),\n      };\n    });\n}\n\nexport function processStops(\n  stops: UnprocessedGradientStops,\n): GradientStops {\n  let wasProcessed = false;\n  const numStops = stops.length;\n  const processedStops = stops.map((stop, i) => {\n    if (typeof stop !== 'object' || stop.offset == null) {\n      wasProcessed = true;\n      return {\n        offset: i / (numStops - 1),\n        color: typeof stop === 'object' ? stop.color : stop\n      };\n    }\n    return stop;\n  });\n  return wasProcessed ? processedStops: (stops as GradientStops);\n}\n","export default '0.7.0';\n","import * as React from 'react';\n\nimport { forcePercent } from './utils';\n\ninterface Props {\n  color: string,\n  offset: string | number\n};\n\nconst GradientStop = ({\n  offset,\n  color,\n}: Props) => {\n  return <stop offset={forcePercent(offset)} stopColor={color} />;\n};\n\nexport default React.memo(GradientStop);\n","import * as React from 'react';\n\nimport {\n  GradientColor,\n  SpreadMethod,\n  UnprocessedGradientStops,\n} from './types';\n\nimport {\n  DEGREES_TO_RADIANS,\n  SPREAD_METHOD_PAD,\n} from './constants'\nimport { processStops } from './utils';\n\nimport GradientStop from './GradientStop';\n\ninterface Props {\n  angle?: number,\n  from?: GradientColor,\n  id: string,\n  spreadMethod?: SpreadMethod,\n  scale?: number,\n  stops?: UnprocessedGradientStops,\n  to?: GradientColor\n};\n\nconst LinearGradient = ({\n  angle = 0,\n  from = 'inherit',\n  id,\n  scale = 1,\n  spreadMethod = SPREAD_METHOD_PAD,\n  stops,\n  to = 'inherit'\n}: Props) => {\n  const gradientStops = React.useMemo(\n    () => processStops(stops || ([from, to])),\n    [from, to, stops],\n  );\n\n  // 0 degrees goes bottom-to-top, 90 degrees goes left-to-right, etc.\n  const { x1, x2, y1, y2 } = React.useMemo(() => {\n    const radians = angle * DEGREES_TO_RADIANS;\n    const x = scale * Math.sin(radians);\n    const y = scale * Math.cos(radians);\n    const xl = Math.max(-x, 0);\n    const xr = Math.max(0, x);\n    const yl = Math.max(y, 0);\n    const yr = Math.max(0, -y);\n\n    // Offset to keep the gradient centered\n    const xRange = Math.abs(xr - xl);\n    const yRange = Math.abs(yr - yl);\n    const xo = 0.5 * (1 - xRange);\n    const yo = 0.5 * (1 - yRange);\n\n    return {\n      x1: xl + xo,\n      x2: xr + xo,\n      y1: yl + yo,\n      y2: yr + yo,\n    };\n  }, [angle]);\n\n  return (\n    <linearGradient\n      id={id}\n      x1={x1}\n      x2={x2}\n      y1={y1}\n      y2={y2}\n      spreadMethod={spreadMethod}\n    >\n      {gradientStops.map((stopProps, key) => (\n        <GradientStop\n          key={stopProps.offset != null ? stopProps.offset : key}\n          {...stopProps}\n        />\n      ))}\n    </linearGradient>\n  );\n};\n\nexport default React.memo(LinearGradient);\n","import * as React from 'react';\n\nimport {\n  GradientColor,\n  SpreadMethod,\n  UnprocessedGradientStops,\n} from './types';\n\nimport { SPREAD_METHOD_PAD } from './constants';\nimport { processStops } from './utils';\n\nimport GradientStop from './GradientStop';\n\ninterface Props {\n  cx?: number,\n  cy?: number,\n  from?: GradientColor,\n  fx?: number,\n  fy?: number,\n  id: string,\n  r?: number,\n  spreadMethod?: SpreadMethod,\n  stops?: UnprocessedGradientStops,\n  to?: GradientColor\n};\n\nconst RadialGradient = ({\n  cx = 0.5,\n  cy = 0.5,\n  from = 'inherit',\n  fx = 0.5,\n  fy = 0.5,\n  id,\n  r = 0.5,\n  spreadMethod = SPREAD_METHOD_PAD,\n  stops,\n  to = 'inherit',\n}: Props) => {\n  const gradientStops = React.useMemo(\n    () => processStops(stops || ([from, to])),\n    [from, to, stops],\n  );\n\n  return (\n    <radialGradient\n      id={id}\n      cx={cx}\n      cy={cy}\n      fx={fx}\n      fy={fy}\n      r={r}\n      spreadMethod={spreadMethod}\n    >\n      {gradientStops.map((stopProps, key) => (\n        <GradientStop\n          key={stopProps.offset != null ? stopProps.offset : key}\n          {...stopProps}\n        />\n      ))}\n    </radialGradient>\n  );\n};\n\nexport default React.memo(RadialGradient);\n","import * as React from 'react';\n\nimport {\n  GradientColor,\n  SpreadMethod,\n  UnprocessedGradientStops,\n} from './types';\n\nimport { SPREAD_METHOD_PAD } from './constants'\nimport {\n  createAngularGradientPolygons,\n  processStops,\n} from './utils';\n\ninterface Props {\n  angle?: number,\n  from?: GradientColor,\n  id: string,\n  scale?: number,\n  slices?: number,\n  spreadMethod?: SpreadMethod,\n  stops?: UnprocessedGradientStops,\n  to?: GradientColor,\n};\n\nconst AngularGradient = ({\n  angle = 0,\n  from = 'inherit',\n  id,\n  scale = 1,\n  slices = 100,\n  stops,\n  spreadMethod = SPREAD_METHOD_PAD,\n  to = 'inherit',\n}: Props) => {\n  const gradientStops = React.useMemo(\n    () => processStops(stops || ([from, to])),\n    [from, to, stops],\n  );\n  const polygons = React.useMemo(\n    () => createAngularGradientPolygons(angle, gradientStops, scale, spreadMethod, slices),\n    [angle, gradientStops, scale, spreadMethod, slices]\n  );\n\n  return (\n    <pattern\n      height={1}\n      id={id}\n      patternUnits=\"objectBoundingBox\"\n      patternContentUnits=\"objectBoundingBox\"\n      width={1}\n    >\n      {polygons.map(({ key, fill, points }) => (\n        <polygon key={key} fill={fill} points={points} />\n      ))}\n    </pattern>\n  );\n};\n\nexport default React.memo(AngularGradient);\n","import * as React from 'react';\n\ninterface Props {\n  id: string,\n  src?: string\n};\n\nconst BackgroundImage = ({\n  id,\n  src = ''\n}: Props) => (\n  <pattern\n    height={1}\n    id={id}\n    patternContentUnits=\"objectBoundingBox\"\n    patternUnits=\"objectBoundingBox\"\n    width={1}\n  >\n    <image\n      height={1}\n      width={1}\n      x={0}\n      xlinkHref={src}\n      y={0}\n    />\n  </pattern>\n);\n\nexport default React.memo(BackgroundImage);\n","import * as React from 'react';\n\ninterface Props {\n  children?: JSX.Element | JSX.Element[] | ((id: string) => JSX.Element) | null,\n  id: string,\n};\n\nconst CustomSvgPattern = ({\n  children = null,\n  id,\n}: Props) => {\n  return (\n    <pattern\n      height={1}\n      id={id}\n      patternContentUnits=\"objectBoundingBox\"\n      patternUnits=\"objectBoundingBox\"\n      width={1}\n    >\n      {typeof children === 'function' ? children(id) : children}\n    </pattern>\n  );\n};\n\nexport default React.memo(CustomSvgPattern);\n","import * as React from 'react';\n\nfunction needsAnimationHack(UA: string) {\n  return /Safari/.test(UA) && !/Chrome/.test(UA);\n}\n\nconst NoopAnimationHack = () => {\n  const UA = window.navigator.userAgent;\n  const needsHack = React.useMemo(() => needsAnimationHack(UA), [UA]);\n\n  return !needsHack ? null : (\n    <animateTransform\n      attributeName=\"transform\"\n      attributeType=\"XML\"\n      type=\"translate\"\n      from=\"0, 0\" to=\"0, 0\"\n      dur=\"1s\"\n      repeatCount=\"indefinite\"\n    />\n  );\n};\n\nexport default NoopAnimationHack;\n","import {\n  PatternType,\n  SvgPatternData,\n} from './types';\nimport { sanitizeKey } from './utils';\n\nexport default class SvgPatternManager {\n  private idPrefix: string;\n  private patterns: Map<string, SvgPatternData> = new Map();\n  private listeners: Map<Symbol, Function> = new Map();\n\n  public constructor(idPrefix = 'svg-pattern') {\n    this.idPrefix = idPrefix;\n  }\n\n  private dispatch() {\n    this.listeners.forEach(listener => {\n      listener();\n    });\n  }\n\n  public subscribe = (listener: Function) => {\n    const id = Symbol();\n    this.listeners.set(id, listener);\n    return () => {\n      this.listeners.delete(id);\n    };\n  };\n\n  public add = (key: string, type: PatternType, params: {}) => {\n    const patternKey = sanitizeKey(key);\n    const props = params;\n    const id = `${this.idPrefix}-${type}__${patternKey}`;\n    const pattern = { key, id, props, type };\n    this.patterns.set(patternKey, pattern);\n    this.dispatch();\n    return patternKey;\n  };\n\n  public get = (key: string) => {\n    const patternKey = sanitizeKey(key);\n    const pattern = this.patterns.get(patternKey);\n    return pattern ? `url(#${pattern.id})`: undefined;\n  };\n\n  public has = (key: string) => {\n    return this.patterns.has(sanitizeKey(key));\n  };\n\n  public remove = (key: string) => {\n    const patternKey = sanitizeKey(key);\n    if (this.patterns.has(patternKey)) {\n      this.patterns.delete(patternKey);\n      this.dispatch();\n    }\n  }\n\n  public getPatterns = () => {\n    const patterns: { [key:string]: SvgPatternData } = {};\n    for (let [key, pattern] of this.patterns.entries()) {\n      patterns[key] = pattern;\n    }\n    return patterns;\n  };\n}\n","import * as React from 'react';\n\nimport { SvgPatterns } from './types';\n\nimport {\n  PATTERN_TYPE_ANGULAR_GRADIENT,\n  PATTERN_TYPE_CUSTOM,\n  PATTERN_TYPE_IMAGE,\n  PATTERN_TYPE_LINEAR_GRADIENT,\n  PATTERN_TYPE_RADIAL_GRADIENT,\n} from './constants';\n\nimport LinearGradient from './LinearGradient';\nimport RadialGradient from './RadialGradient';\nimport AngularGradient from './AngularGradient';\nimport BackgroundImage from './BackgroundImage';\nimport CustomSvgPattern from './CustomSvgPattern';\n\ninterface Props {\n  patterns?: SvgPatterns,\n  noSvgWrapper?: boolean,\n};\n\nconst SvgPatternLibrary = ({\n  patterns = {},\n  noSvgWrapper = false,\n}: Props) => {\n  const renderedPatterns = React.useMemo(\n    () => Object.entries(patterns as SvgPatterns)\n      .map(([key, { id, props, type }]) => {\n        switch (type) {\n          case PATTERN_TYPE_LINEAR_GRADIENT:\n            return (\n              <LinearGradient key={key} id={id} {...props} />\n            );\n          case PATTERN_TYPE_RADIAL_GRADIENT:\n            return (\n              <RadialGradient key={key} id={id} {...props} />\n            );\n          case PATTERN_TYPE_ANGULAR_GRADIENT:\n            return (\n              <AngularGradient key={key} id={id} {...props} />\n            );\n          case PATTERN_TYPE_IMAGE:\n            return (\n              <BackgroundImage key={key} id={id} {...props} />\n            );\n          case PATTERN_TYPE_CUSTOM:\n            return (\n              <CustomSvgPattern key={key} id={id} {...props} />\n            );\n          default:\n            return null;\n        }\n      }),\n    [patterns]\n  );\n\n  if (noSvgWrapper) {\n    return (\n      <>\n        {renderedPatterns}\n      </>\n    );\n  }\n\n  return (\n    <svg\n      style={{\n        bottom: 0,\n        height: 1,\n        opacity: 0,\n        pointerEvents: 'none',\n        position: 'fixed',\n        right: 0,\n        width: 1,\n        zIndex: -1\n      }}\n    >\n      {renderedPatterns}\n    </svg>\n  );\n};\n\nexport default React.memo(SvgPatternLibrary);\n","import * as React from 'react';\n\nimport { PatternType } from './types';\n\nimport SvgPatternLibrary from './SvgPatternLibrary';\nimport SvgPatternManager from './SvgPatternManager';\n\ninterface Props {\n  noSvgWrapper?: boolean;\n}\n\nlet svgPatternIndex = 0;\n\nexport default function createManagedSvgPatternLibrary(\n  patternManagerOrId?: string | SvgPatternManager\n) {\n  const patternManager =\n    (patternManagerOrId as any) instanceof SvgPatternManager\n      ? (patternManagerOrId as SvgPatternManager)\n      : new SvgPatternManager(patternManagerOrId as string);\n  const ManagedSvgPatternLibrary = (props: Props) => {\n    const [patterns, setPatterns] = React.useState(patternManager.getPatterns());\n\n    React.useEffect(() => {\n      setPatterns(patternManager.getPatterns());\n\n      const unsubscribe = patternManager.subscribe(() => {\n        setPatterns(patternManager.getPatterns());\n      });\n\n      return () => {\n        unsubscribe();\n      };\n    }, []);\n\n    return <SvgPatternLibrary patterns={patterns} {...props} />;\n  };\n\n  function getSvgPattern(key: string) {\n    return patternManager.get(key);\n  }\n\n  function registerSvgPattern(key: string, type: PatternType, params: Object) {\n    return patternManager.get(patternManager.add(key, type, params));\n  }\n\n  function useSvgPattern(explicitKey: string | undefined, type: PatternType, params: Object) {\n    const key = React.useMemo(() => explicitKey || `P_${++svgPatternIndex}`, [explicitKey]);\n    const [pattern, setPattern] = React.useState<string | undefined>(undefined);\n    React.useLayoutEffect(() => {\n      setPattern(patternManager.get(patternManager.add(key, type, params)));\n      return () => {\n        patternManager.remove(key);\n      };\n    }, [key, type, params]);\n    return pattern;\n  }\n\n  function useOptionalKeySvgPattern(\n    key: string,\n    type: PatternType,\n    params: Object\n  ): string | undefined;\n  function useOptionalKeySvgPattern(type: PatternType, params: Object): string | undefined;\n  function useOptionalKeySvgPattern(\n    key: string | PatternType,\n    type: PatternType | Object,\n    params?: Object\n  ) {\n    return typeof params === 'undefined'\n      ? useSvgPattern(undefined, key as PatternType, type as Object)\n      : useSvgPattern(key, type as PatternType, params);\n  }\n\n  return {\n    ManagedSvgPatternLibrary,\n    getSvgPattern,\n    registerSvgPattern,\n    useSvgPattern: useOptionalKeySvgPattern,\n  };\n}\n","import React, {\n  useCallback,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { NoopAnimationHack } from 'react-svg-patterns';\n\nconst SvgPatternPreview = ({ ...props }) => {\n  const localPatternId = useMemo(() => `pattern-${Math.random().toString().substr(2)}`, []);\n  const [local, setLocal] = useState(false);\n  const handleClick = useCallback(() => {\n    setLocal(value => !value);\n  }, []);\n\n  return (\n    <svg\n      height={100}\n      onClick={handleClick}\n      preserveAspectRatio=\"none\"\n      viewBox=\"0 0 100 100\"\n      width={100}\n      {...props}\n    >\n      {!local ? null : (\n        <defs>\n          <pattern\n            id={localPatternId}\n            x={0}\n            y={0}\n            width=\"100%\"\n            height=\"100%\"\n            patternUnits=\"userSpaceOnUse\"\n            patternContentUnits=\"userSpaceOnUse\"\n          >\n            <rect fill=\"inherit\" x={0} y={0} width=\"100%\" height=\"100%\" />\n          </pattern>\n        </defs>\n      )}\n      <NoopAnimationHack />\n      <g fill={!local ? 'inherit' : `url(#${localPatternId})`}>\n        <rect x={5} y={5} width={90} height={90} />\n      </g>\n    </svg>\n  );\n}\n\nexport default SvgPatternPreview;\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\nimport JSON5 from 'json5';\nimport rehype from 'rehype-dom';\n\nimport AceEditor from 'react-ace';\n\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/mode-svg';\nimport 'ace-builds/src-noconflict/theme-eclipse';\n\nimport SvgPatternPreview from './SvgPatternPreview';\n\nconst EXAMPLE_KEYS = [\n  'linear',\n  'radial',\n  'angular',\n  'image',\n  'custom',\n];\nconst EXAMPLE_TYPE = EXAMPLE_KEYS[Math.floor(Math.random() * EXAMPLE_KEYS.length)];\nconst EXAMPLE_LABELS = {\n  linear: 'Linear Gradient',\n  radial: 'Radial Gradient',\n  angular: 'Angular Gradient',\n  image: 'Background Image',\n  custom: 'Custom',\n};\nconst EXAMPLE_OPTIONS = {\n  linear: {\n    from: '#009999',\n    to: '#cc3366',\n    angle: 90,\n  },\n  radial: {\n    r: 0.71,\n    stops: [\n      // center\n      { offset: 0, color: '#330000' },\n      { offset: 0.23, color: '#110000' },\n      // ring\n      { offset: 0.24, color: '#cc6600' },\n      { offset: 0.27, color: '#993300' },\n      { offset: 0.34, color: '#660000' },\n      //\n      { offset: 0.35, color: '#cc6600' },\n      { offset: 0.40, color: '#993300' },\n      { offset: 0.47, color: '#660000' },\n      //\n      { offset: 0.48, color: '#cc6600' },\n      { offset: 0.55, color: '#993300' },\n      { offset: 0.64, color: '#660000' },\n      //\n      { offset: 0.65, color: '#cc6600' },\n      { offset: 0.74, color: '#993300' },\n      { offset: 0.84, color: '#660000' },\n      //\n      { offset: 0.85, color: '#cc6600' },\n      { offset: 0.91, color: '#993300' },\n      { offset: 1, color: '#660000' },\n    ],\n  },\n  angular: {\n    slices: 200,\n    stops: ['#ff0000', '#ffff00', '#00ff00', '#00ffff', '#0000ff', '#ff00ff', '#ff0000'],\n  },\n  image: {\n    src: 'https://via.placeholder.com/150',\n  },\n  custom: `<g transform=\"translate(0.5, 0.5) scale(1.42) rotate(-45) translate(-0.5, -0.5)\">\n  <g>\n    <animateTransform attributeName=\"transform\" attributeType=\"XML\" type=\"translate\" from=\"0, 0\" to=\"0, -1\" dur=\"5s\" repeatCount=\"indefinite\" />\n    <rect fill=\"#FD5068\" x=\"0\" y=\"0\" width=\"1\" height=\"1\" />\n    <rect fill=\"#FC9B27\" x=\"0\" y=\"0.167\" width=\"1\" height=\"1\" />\n    <rect fill=\"#FFDE4B\" x=\"0\" y=\"0.333\" width=\"1\" height=\"1\" />\n    <rect fill=\"#3CCE9E\" x=\"0\" y=\"0.5\" width=\"1\" height=\"1\" />\n    <rect fill=\"#429AEA\" x=\"0\" y=\"0.666\" width=\"1\" height=\"1\" />\n    <rect fill=\"#7366D3\" x=\"0\" y=\"0.833\" width=\"1\" height=\"1\" />\n    <rect fill=\"#FD5068\" x=\"0\" y=\"1\" width=\"1\" height=\"1\" />\n    <rect fill=\"#FC9B27\" x=\"0\" y=\"1.167\" width=\"1\" height=\"1\" />\n    <rect fill=\"#FFDE4B\" x=\"0\" y=\"1.333\" width=\"1\" height=\"1\" />\n    <rect fill=\"#3CCE9E\" x=\"0\" y=\"1.5\" width=\"1\" height=\"1\" />\n    <rect fill=\"#429AEA\" x=\"0\" y=\"1.666\" width=\"1\" height=\"1\" />\n    <rect fill=\"#7366D3\" x=\"0\" y=\"1.833\" width=\"1\" height=\"1\" />\n  </g>\n</g>\n`,\n};\n\nfunction unwrapSvgElement() {\n  function findSvgElement(node) {\n    if (node.type === 'element' && node.tagName === 'svg') {\n      return node;\n    }\n    return node.children && node.children.find(childNode => findSvgElement(childNode));\n  }\n\n  function findSvgRoot(node) {\n    const svgElement = node && findSvgElement(node);\n    return !svgElement ? node : {\n      type: 'root',\n      children: svgElement.children,\n    };\n  }\n\n  return node => findSvgRoot(node);\n}\n\nfunction evaluateWithId(id) {\n  // Janky security...hopefully nobody wants to self-XSS\n  const globals = {\n    window: {},\n    document: {},\n    globalThis: {},\n    console: {},\n    alert: () => undefined,\n    fetch: () => undefined,\n    XMLHttpRequest: undefined,\n  };\n  const globalKeys = Object.keys(globals);\n  const globalValues = globalKeys.map(key => globals[key]);\n  function processExpression(expression) {\n    if (!expression.trim()) {\n      return undefined;\n    }\n    try {\n      // eslint-disable-next-line no-new-func\n      const expressionFn = new Function(['id', ...globalKeys], `return (${expression});`);\n      const result = expressionFn(id, ...globalValues);\n      return result.toString();\n    } catch (e) {\n      console.error('failed to evaluate expression:', expression);\n      console.error(e);\n      return expression;\n    }\n  }\n\n  function processValue(value, key) {\n    const [, expression] = value.match(/^\\{(.*)\\}$/) || [value, undefined];\n    return expression == null ? value : processExpression(expression);\n  }\n\n  function processNode(srcNode) {\n    if (!srcNode) {\n      return srcNode;\n    }\n    const node = { ...srcNode };\n    if (node.children) {\n      node.children = srcNode.children.map(childNode => processNode(childNode));\n    }\n    if (node.properties) {\n      node.properties = {};\n      Object.entries(srcNode.properties).forEach(([key, value]) => {\n        node.properties[key] = processValue(value, key);\n      });\n    }\n    if (node.type === 'text') {\n      node.value = processValue(node.value);\n    }\n    return node;\n  }\n\n  return node => processNode(node);\n}\n\nconst createSvgGroup = (value, id) => {\n  window.lastValue = value;\n  let processedValue;\n  try {\n    processedValue = rehype()\n      .use(unwrapSvgElement)\n      .use(evaluateWithId, id)\n      .processSync(`<svg>${value}</svg>`)\n      .toString();\n  } catch (e) {\n    processedValue = value;\n  }\n  return (\n    <g dangerouslySetInnerHTML={{ __html: processedValue }} />\n  );\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_TYPE': {\n      const type = action.payload;\n      const exampleOptions = EXAMPLE_OPTIONS[type];\n      const options = typeof exampleOptions === 'string'\n        ? { children: id => createSvgGroup(exampleOptions, id), }\n        : exampleOptions;\n      const optionsValue = typeof exampleOptions === 'string'\n        ? exampleOptions\n        : JSON5.stringify(exampleOptions, null, 2) + '\\n';\n      return { ...state, type, options, optionsValue };\n      }\n\n    case 'SET_OPTIONS_VALUE': {\n      const optionsValue = action.payload;\n      try {\n        const options = state.type === 'custom'\n          ? { children: id => createSvgGroup(optionsValue, id) }\n          : JSON5.parse(optionsValue);\n        return { ...state, options, optionsValue };\n      } catch (e) {\n        return { ...state, optionsValue };\n      }\n    }\n\n    default:\n      return state;\n  }\n}\n\nconst DemoPatternEditor = ({\n  className,\n  onSetPatternId,\n  patternKey = 'demo',\n  registerSvgPattern,\n}) => {\n  const [{\n    type,\n    optionsValue,\n    options,\n  }, dispatch] = useReducer(reducer, {\n    type: EXAMPLE_TYPE,\n    options: typeof EXAMPLE_OPTIONS[EXAMPLE_TYPE] === 'string'\n      ? { children: id => createSvgGroup(EXAMPLE_OPTIONS[EXAMPLE_TYPE], id), }\n      : EXAMPLE_OPTIONS[EXAMPLE_TYPE],\n    optionsValue: typeof EXAMPLE_OPTIONS[EXAMPLE_TYPE] === 'string'\n      ? EXAMPLE_OPTIONS[EXAMPLE_TYPE]\n      : JSON5.stringify(EXAMPLE_OPTIONS[EXAMPLE_TYPE], null, 2) + '\\n',\n  })\n  const [fill, setFill] = useState('');\n\n  const codeSample = useMemo(() => {\n    const typeString = JSON5.stringify(type);\n    let optionsString;\n    if (type === 'custom') {\n      optionsString = `{\n  children: id => (\n    <g>\n${optionsValue.split('\\n').map(line => `      ${line}`).join('\\n')}\n    </g>\n  )\n}`;\n    } else {\n      try {\n        optionsString = JSON5.stringify(options, null, 2);\n      } catch (e) {\n        optionsString = '';\n      }\n    }\n\n    return `// Example Usage\nimport { createManagedSvgPatternLibrary } from 'react-svg-patterns';\n\nconst {\n  ManagedSvgPatternLibrary,\n  registerSvgPattern,\n} = createManagedSvgPatternLibrary();\n\n// Register pattern\nconst yourPatternId = registerSvgPattern('yourPatternKey', ${typeString}, ${optionsString});\n\n// Use pattern as a fill in a component\nconst YourSvgComponent = (...props) => (\n  <svg fill={yourPatternId} {...props}>\n    {/* shapes, etc. */}\n  </svg>\n);\n\n// Render ManagedSvgPatternLibrary component in your app\nconst YourApp = () => (\n  <>\n    <div>\n      <YourSvgComponent />\n    </div>\n    <ManagedSvgPatternLibrary />\n  </>\n);\n`;\n  }, [type, options, optionsValue])\n\n  const handleTypeChange = useCallback((e, value = e.currentTarget.value) => {\n    dispatch({ type: 'SET_TYPE', payload: value });\n  }, []);\n\n  const handleOptionsEditorChange = useCallback((value) => {\n    dispatch({ type: 'SET_OPTIONS_VALUE', payload: value });\n  }, []);\n\n  useEffect(() => {\n    const patternId = registerSvgPattern(patternKey, type, options);\n    setFill(patternId);\n    if (onSetPatternId) {\n      onSetPatternId(patternId);\n    }\n  }, [onSetPatternId, patternKey, registerSvgPattern, type, options]);\n\n  const aceTheme = 'eclipse';\n  const aceEditorProps = useMemo(() => ({\n    $blockScrolling: true,\n  }), []);\n  const aceOptions = useMemo(() => ({\n    showLineNumbers: false,\n    tabSize: 2,\n    showPrintMargin: false,\n    useSoftTabs: true,\n    useWorker: false,\n  }), []);\n\n  return (\n    <div className={className}>\n      <div className=\"typeSelect\">\n        <label>Type</label>\n        <select onChange={handleTypeChange} value={type}>\n          {EXAMPLE_KEYS.map(key => (\n            <option key={key} value={key}>{EXAMPLE_LABELS[key] || key}</option>\n          ))}\n        </select>\n      </div>\n      <div className=\"optionsEditor\">\n        <AceEditor\n          editorProps={aceEditorProps}\n          height=\"100%\"\n          mode={type === 'custom' ? 'svg' : 'javascript'}\n          name=\"patternOptions\"\n          onChange={handleOptionsEditorChange}\n          setOptions={aceOptions}\n          theme={aceTheme}\n          value={optionsValue}\n          width=\"100%\"\n        />\n      </div>\n      <div className=\"patternPreview\">\n        <SvgPatternPreview fill={fill} preserveAspectRatio=\"none\" />\n      </div>\n      <div className=\"codeSample\">\n        <AceEditor\n          editorProps={aceEditorProps}\n          mode=\"javascript\"\n          name=\"sampleCode\"\n          height=\"100%\"\n          readOnly\n          setOptions={aceOptions}\n          theme={aceTheme}\n          value={codeSample}\n          width=\"100%\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default styled(DemoPatternEditor)`\n  display: grid;\n  grid-template-rows: min-content 0.5fr 0.5fr;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 1px;\n  background-color: #9f9f9f;\n  border-top: 1px solid #9f9f9f;\n  border-bottom: 1px solid #9f9f9f;\n\n  .typeSelect {\n    display: flex;\n    position: relative;\n    grid-row: 1 / 2;\n    grid-column: 1 / 2;\n\n    > label {\n      padding: 10px 20px;\n      color: #9f9f9f;\n      background-color: #e8e8e8;\n      border-right: 1px solid #9f9f9f;\n    }\n\n    > select {\n      appearance: none;\n      display: block;\n      width: 100%;\n      height: 100%;\n      padding: 10px 20px;\n      box-sizing: border-box;\n      outline: 0;\n      border: 0;\n      border-radius: 0;\n      background-color: #fff;\n      color: inherit;\n      font: inherit;\n      cursor: pointer;\n\n      &:focus {\n        background-color: #e8f2fd;\n      }\n    }\n\n    &::after {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      padding: 10px;\n      pointer-events: none;\n      color: #9f9f9f;\n      content: '▾';\n    }\n  }\n\n  .optionsEditor {\n    grid-row: 2 / -2;\n    grid-column: 1 / 2;\n    height: 100%;\n  }\n\n  .patternPreview {\n    grid-row: 1 / -2;\n    grid-column: 2 / 3;\n    background-color: #fff;\n\n    > svg {\n      display: block;\n      width: 100%;\n      min-height: 100%;\n    }\n  }\n\n  .codeSample {\n    grid-row: -2 / -1;\n    grid-column: 1 / -1;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst GithubCorner = ({\n  backgroundFill = '#151513',\n  className,\n  foregroundFill = '#fff',\n  height = 80,\n  width = 80,\n}) => (\n  <svg\n    className={className}\n    fill={backgroundFill}\n    height={height}\n    viewBox=\"0 0 250 250\"\n    width={width}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M0 0l115 115h15l12 27 108 108V0z\" />\n    <g className=\"octocat\" fill={foregroundFill}>\n      <path className=\"octocat-arm\" d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\" style={{ transformOrigin: '130px 106px' }} />\n      <path className=\"octocat-body\" d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\" />\n    </g>\n  </svg>\n);\n\nexport default styled(GithubCorner)`\n  &:hover {\n    .octocat-arm {\n      animation: octocat-wave 560ms ease-in-out;\n    };\n  }\n\n  @keyframes octocat-wave {\n    0%, 100% {\n      transform: rotate(0);\n    }\n\n    20%, 60% {\n      transform: rotate(-25deg);\n    }\n\n    40%, 80% {\n      transform: rotate(10deg);\n    }\n  }\n\n  @media (max-width: 500px) {\n    .octocat-arm {\n      animation: octocat-wave 560ms ease-in-out;\n    }\n\n    &:hover .octocat-arm {\n      animation: none\n    }\n  }\n`;\n","import React, { useCallback, useState } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nimport { VERSION, createManagedSvgPatternLibrary } from 'react-svg-patterns';\n\nimport DemoPatternEditor from './DemoPatternEditor';\nimport GithubCorner from './GithubCorner';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  html,\n  body {\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    font-family: sans-serif;\n    color: #000;\n    background-color: #fff;\n  }\n\n  a {\n    color: #36f;\n\n    &:hover {\n      color: #69f;\n    }\n\n    &:active {\n      color: #69f;\n    }\n  }\n`;\n\nconst { ManagedSvgPatternLibrary, registerSvgPattern } = createManagedSvgPatternLibrary();\n\nconst App = ({ className }) => {\n  const [fill, setFill] = useState();\n  const handleSetPatternId = useCallback((patternId) => {\n    setFill(patternId);\n  }, []);\n\n  return (\n    <>\n      <GlobalStyle />\n      <div className={className}>\n        <main>\n          <header>\n            <h1>React SVG Pattern Manager</h1>\n            <p>Create, manage, and use SVG patterns in your React components!</p>\n          </header>\n          <DemoPatternEditor\n            onSetPatternId={handleSetPatternId}\n            patternKey=\"demo\"\n            registerSvgPattern={registerSvgPattern}\n          />\n          <footer>\n            <p>\n              <code>\n                <a href=\"https://www.npmjs.com/package/react-svg-patterns\" target=\"_blank\">\n                  react-svg-patterns\n                </a>\n                {`@${VERSION}`}\n              </code>\n            </p>\n            <p>\n              © 2019{`-${Math.max(2021, new Date().getFullYear())} `}\n              <a href=\"https://mcknig.ht\" target=\"_blank\">\n                Keith McKnight\n              </a>\n            </p>\n          </footer>\n        </main>\n        <aside>\n          <a href=\"https://github.com/kmck/react-svg-patterns\" target=\"_blank\">\n            <GithubCorner backgroundFill={fill} />\n          </a>\n        </aside>\n      </div>\n      <ManagedSvgPatternLibrary idPrefix=\"libraryDemo\" />\n    </>\n  );\n};\n\nexport default styled(App)`\n  main {\n    display: grid;\n    grid-template-rows: min-content auto min-content;\n    width: 100vw;\n    min-height: 100vh;\n  }\n\n  header {\n    padding: 20px 80px 20px 34px;\n    min-height: 100px;\n    box-sizing: border-box;\n  }\n\n  h1 {\n    font-weight: bold;\n    font-size: 2rem;\n    margin-bottom: 10px;\n  }\n\n  code {\n    font-family: monospace;\n  }\n\n  aside {\n    position: fixed;\n    top: 0;\n    right: 0;\n\n    a,\n    svg {\n      display: block;\n    }\n  }\n\n  footer {\n    padding: 20px 34px;\n    font-size: 0.8rem;\n    text-align: center;\n    box-sizing: border-box;\n  }\n\n  p:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}