{"version":3,"sources":["../../src/constants.ts","../../node_modules/tslib/tslib.es6.js","../../src/utils.ts","../../src/GradientStop.tsx","../../src/LinearGradient.tsx","../../src/RadialGradient.tsx","../../src/AngularGradient.tsx","../../src/BackgroundImage.tsx","../../src/CustomSvgPattern.tsx","../../src/NoopAnimationHack.tsx","../../src/SvgPatternManager.ts","../../src/SvgPatternLibrary.tsx","SvgPatternPreview.jsx","DemoPatternEditor.js","GithubCorner.jsx","App.js","../../src/createManagedSvgPatternLibrary.tsx","index.js"],"names":["DEGREES_TO_RADIANS","Math","PI","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","safeHexRgb","color","red","green","blue","alpha","sanitizeKey","key","replace","sortBy","arr","concat","sort","a","b","createGetColor","stops","scale","spreadMethod","sortedColors","firstStop","lastStop","sortedColorsLength","cache","Map","offset","has","get","abs","floor","leftStop","findLeftStop","rightStop","findRightStop","amount","color1","color2","w","aDiff","a2","a1","w2","w1","round","r1","r2","g","g1","g2","b1","b2","mixColors","set","createAngularGradientPolygons","angle","slices","getColor","numPoints","ceil","pointDistance","Array","fill","map","_0","slice","start","points","sin","cos","angleToPoint","point","join","processStops","wasProcessed","numStops","processedStops","stop","React.memo","num","React.createElement","stopColor","from","id","to","gradientStops","React.useMemo","x1","x2","y1","y2","stopProps","GradientStop","cx","cy","fx","fy","polygons","height","patternUnits","patternContentUnits","width","src","x","xlinkHref","y","children","UA","window","navigator","userAgent","test","needsAnimationHack","attributeName","attributeType","type","dur","repeatCount","idPrefix","patterns","listeners","Set","subscribe","listener","add","params","patternKey","props","pattern","dispatch","remove","delete","getPatterns","entries","forEach","noSvgWrapper","renderedPatterns","LinearGradient","RadialGradient","AngularGradient","BackgroundImage","CustomSvgPattern","style","bottom","opacity","pointerEvents","position","right","zIndex","SvgPatternPreview","localPatternId","useMemo","random","toString","substr","useState","local","setLocal","handleClick","useCallback","onClick","preserveAspectRatio","viewBox","EXAMPLE_KEYS","EXAMPLE_TYPE","EXAMPLE_LABELS","linear","radial","angular","image","custom","EXAMPLE_OPTIONS","unwrapSvgElement","findSvgRoot","node","svgElement","findSvgElement","tagName","find","childNode","evaluateWithId","globals","document","globalThis","console","alert","fetch","XMLHttpRequest","undefined","globalKeys","keys","globalValues","processValue","match","expression","trim","Function","processExpression","processNode","srcNode","properties","createSvgGroup","processedValue","lastValue","rehype","use","processSync","dangerouslySetInnerHTML","__html","reducer","state","action","payload","exampleOptions","options","optionsValue","JSON5","stringify","parse","styled","className","onSetPatternId","registerSvgPattern","useReducer","setFill","codeSample","optionsString","typeString","split","line","handleTypeChange","currentTarget","handleOptionsEditorChange","useEffect","patternId","aceEditorProps","$blockScrolling","aceOptions","showLineNumbers","tabSize","showPrintMargin","useSoftTabs","useWorker","onChange","editorProps","mode","name","setOptions","theme","readOnly","backgroundFill","foregroundFill","xmlns","d","transformOrigin","GlobalStyle","createGlobalStyle","reset","patternManagerOrId","patternManager","SvgPatternManager","ManagedSvgPatternLibrary","setPatterns","React.useEffect","unsubscribe","SvgPatternLibrary","getSvgPattern","createManagedSvgPatternLibrary","handleSetPatternId","href","target","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.55dd16be.chunk.js","sourcesContent":["export const PATTERN_TYPE_LINEAR_GRADIENT = 'linear';\nexport const PATTERN_TYPE_RADIAL_GRADIENT = 'radial';\nexport const PATTERN_TYPE_ANGULAR_GRADIENT = 'angular';\nexport const PATTERN_TYPE_IMAGE = 'image';\nexport const PATTERN_TYPE_CUSTOM = 'custom';\n\nexport const SPREAD_METHOD_PAD = 'pad';\nexport const SPREAD_METHOD_REFLECT = 'reflect';\nexport const SPREAD_METHOD_REPEAT = 'repeat';\n\nexport const DEGREES_TO_RADIANS = Math.PI / 180;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import rgbHex from 'rgb-hex';\nimport hexRgb from 'hex-rgb';\n\nimport {\n  GradientColor,\n  GradientStops,\n  SpreadMethod,\n  UnprocessedGradientStops,\n} from './types';\n\nimport {\n  DEGREES_TO_RADIANS,\n  SPREAD_METHOD_PAD,\n  SPREAD_METHOD_REFLECT,\n  SPREAD_METHOD_REPEAT,\n} from './constants';\n\nfunction safeHexRgb(color: string) {\n  try {\n    return hexRgb(color);\n  } catch (e) {\n    return {\n      red: 0,\n      green: 0,\n      blue: 0,\n      alpha: 0,\n    };\n  }\n}\n\nexport const sanitizeKey = (key: string) => key.replace(/\\s/g, '-');\nexport const forcePercent = (num: number | string) => (typeof num === 'number' ? `${num * 100}%` : num);\nexport function sortBy<T>(arr: Array<T>, key: string): T[] {\n  function comparator(a: { [key: string]: any }, b: { [key: string]: any }) {\n    if (a[key] > b[key]) {\n      return 1;\n    }\n    if (a[key] < b[key]) {\n      return -1;\n    }\n    return 0;\n  }\n  return [...arr].sort(comparator);\n}\n\nexport function angleToPoint(angle: number): [number, number] {\n  const x = 0.5 + Math.sin(angle * DEGREES_TO_RADIANS);\n  const y = 0.5 - Math.cos(angle * DEGREES_TO_RADIANS);\n  return [x, y];\n}\n\nexport function mixColors(\n  color1: string,\n  color2: string,\n  amount: number = 0.5,\n) {\n  const { red: r1, green: g1, blue: b1, alpha: a1 } = safeHexRgb(color1);\n  const { red: r2, green: g2, blue: b2, alpha: a2 } = safeHexRgb(color2);\n\n  const w = (2 * amount) - 1;\n  const aDiff = a2 - a1;\n\n  const w2 = ((w * aDiff === -1 ? w : (w + aDiff) / (1 + w * aDiff)) + 1) / 2.0;\n  const w1 = 1 - w2;\n\n  const r = Math.round(w1 * r1 + w2 * r2);\n  const g = Math.round(w1 * g1 + w2 * g2);\n  const b = Math.round(w1 * b1 + w2 * b2);\n  const a = (a1 * amount) + (a2 * (1 - amount));\n\n  return `#${a < 1 ? rgbHex(r, g, b, a) : rgbHex(r, g, b)}`;\n}\n\nexport function createGetColor(\n  stops: GradientStops,\n  scale: number = 1,\n  spreadMethod: SpreadMethod = SPREAD_METHOD_PAD,\n) {\n  const sortedColors = sortBy(stops, 'offset');\n  const firstStop = sortedColors[0];\n  const lastStop = sortedColors[sortedColors.length - 1];\n  const sortedColorsLength = sortedColors.length;\n  const findLeftStop = (offset: number) => {\n    for (let i = sortedColorsLength - 1; i >= 0; i -= 1) {\n      if (offset >= sortedColors[i].offset) {\n        return sortedColors[i];\n      }\n    }\n    return undefined;\n  };\n  const findRightStop = (offset: number) => {\n    for (let i = 0; i < sortedColorsLength; i += 1) {\n      if (offset <= sortedColors[i].offset) {\n        return sortedColors[i];\n      }\n    }\n    return undefined;\n  };\n\n  const cache = new Map<number, GradientColor>();\n\n  return (offset: number): GradientColor => {\n    if (cache.has(offset)) {\n      return cache.get(offset) as GradientColor;\n    }\n\n    let i = offset / scale;\n    if (i < 0 || i > 1) {\n      switch (spreadMethod) {\n        case SPREAD_METHOD_REFLECT:\n          i = Math.abs(i) % 2;\n          if (Math.floor(i) === 1) {\n            i = -i;\n          }\n          i %= 1;\n          if (i < 0) {\n            i += 1;\n          }\n          break;\n        case SPREAD_METHOD_REPEAT:\n          if (i !== 0) {\n            i %= 1;\n          }\n          if (i <= 0 && offset) {\n            i += 1;\n          }\n          break;\n        case SPREAD_METHOD_PAD:\n        default:\n          break;\n      }\n    }\n    [].find\n    const leftStop = findLeftStop(i) || firstStop;\n    const rightStop = findRightStop(i) || lastStop;\n    const amount = (rightStop.offset !== leftStop.offset)\n      ? (i - leftStop.offset) / (rightStop.offset - leftStop.offset)\n      : 1;\n    const color = mixColors(leftStop.color, rightStop.color, amount);\n    cache.set(offset, color);\n    return color;\n  };\n}\n\nexport function createAngularGradientPolygons(\n  angle: number,\n  stops: GradientStops,\n  scale: number,\n  spreadMethod: SpreadMethod,\n  slices: number,\n) {\n  const getColor = createGetColor(stops, scale, spreadMethod);\n  const numPoints = Math.ceil(8 / slices);\n  const pointDistance = 1 / slices / numPoints;\n  return (new Array(slices)).fill(0)\n    .map((_0, slice: number) => {\n      const color = getColor(slices > 1 ? slice / (slices - 1) : 0);\n      const start = slice / slices;\n      const pointsForSlice = slice === slices - 1 ? numPoints + 2 : numPoints + 3\n      const points: ([number, number])[] = (new Array(pointsForSlice)).fill(0)\n        .map((_0, i) => {\n          if (!i) {\n            return [0.5, 0.5];\n          }\n          const offset = pointDistance * (i - 1);\n          return angleToPoint((360 * (start + offset)) + angle);\n        });\n      return {\n        key: start,\n        fill: color,\n        points: points.map(point => point.join(',')).join(' '),\n      };\n    });\n}\n\nexport function processStops(\n  stops: UnprocessedGradientStops,\n): GradientStops {\n  let wasProcessed = false;\n  const numStops = stops.length;\n  const processedStops = stops.map((stop, i) => {\n    if (typeof stop !== 'object' || stop.offset == null) {\n      wasProcessed = true;\n      return {\n        offset: i / (numStops - 1),\n        color: typeof stop === 'object' ? stop.color : stop\n      };\n    }\n    return stop;\n  });\n  return wasProcessed ? processedStops: (stops as GradientStops);\n}\n","import * as React from 'react';\n\nimport { forcePercent } from './utils';\n\ninterface Props {\n  color: string,\n  offset: string | number\n};\n\nconst GradientStop = ({\n  offset,\n  color,\n}: Props) => {\n  return <stop offset={forcePercent(offset)} stopColor={color} />;\n};\n\nexport default React.memo(GradientStop);\n","import * as React from 'react';\n\nimport {\n  GradientColor,\n  SpreadMethod,\n  UnprocessedGradientStops,\n} from './types';\n\nimport {\n  DEGREES_TO_RADIANS,\n  SPREAD_METHOD_PAD,\n} from './constants'\nimport { processStops } from './utils';\n\nimport GradientStop from './GradientStop';\n\ninterface Props {\n  angle?: number,\n  from?: GradientColor,\n  id: string,\n  spreadMethod?: SpreadMethod,\n  scale?: number,\n  stops?: UnprocessedGradientStops,\n  to?: GradientColor\n};\n\nconst LinearGradient = ({\n  angle = 0,\n  from = 'inherit',\n  id,\n  scale = 1,\n  spreadMethod = SPREAD_METHOD_PAD,\n  stops,\n  to = 'inherit'\n}: Props) => {\n  const gradientStops = React.useMemo(\n    () => processStops(stops || ([from, to])),\n    [from, to, stops],\n  );\n\n  // 0 degrees goes bottom-to-top, 90 degrees goes left-to-right, etc.\n  const { x1, x2, y1, y2 } = React.useMemo(() => {\n    const radians = angle * DEGREES_TO_RADIANS;\n    const x = scale * Math.sin(radians);\n    const y = scale * Math.cos(radians);\n    const xl = Math.max(-x, 0);\n    const xr = Math.max(0, x);\n    const yl = Math.max(y, 0);\n    const yr = Math.max(0, -y);\n\n    // Offset to keep the gradient centered\n    const xRange = Math.abs(xr - xl);\n    const yRange = Math.abs(yr - yl);\n    const xo = 0.5 * (1 - xRange);\n    const yo = 0.5 * (1 - yRange);\n\n    return {\n      x1: xl + xo,\n      x2: xr + xo,\n      y1: yl + yo,\n      y2: yr + yo,\n    };\n  }, [angle]);\n\n  return (\n    <linearGradient\n      id={id}\n      x1={x1}\n      x2={x2}\n      y1={y1}\n      y2={y2}\n      spreadMethod={spreadMethod}\n    >\n      {gradientStops.map((stopProps, key) => (\n        <GradientStop\n          key={stopProps.offset != null ? stopProps.offset : key}\n          {...stopProps}\n        />\n      ))}\n    </linearGradient>\n  );\n};\n\nexport default React.memo(LinearGradient);\n","import * as React from 'react';\n\nimport {\n  GradientColor,\n  SpreadMethod,\n  UnprocessedGradientStops,\n} from './types';\n\nimport { SPREAD_METHOD_PAD } from './constants';\nimport { processStops } from './utils';\n\nimport GradientStop from './GradientStop';\n\ninterface Props {\n  cx?: number,\n  cy?: number,\n  from?: GradientColor,\n  fx?: number,\n  fy?: number,\n  id: string,\n  r?: number,\n  spreadMethod?: SpreadMethod,\n  stops?: UnprocessedGradientStops,\n  to?: GradientColor\n};\n\nconst RadialGradient = ({\n  cx = 0.5,\n  cy = 0.5,\n  from = 'inherit',\n  fx = 0.5,\n  fy = 0.5,\n  id,\n  r = 0.5,\n  spreadMethod = SPREAD_METHOD_PAD,\n  stops,\n  to = 'inherit',\n}: Props) => {\n  const gradientStops = React.useMemo(\n    () => processStops(stops || ([from, to])),\n    [from, to, stops],\n  );\n\n  return (\n    <radialGradient\n      id={id}\n      cx={cx}\n      cy={cy}\n      fx={fx}\n      fy={fy}\n      r={r}\n      spreadMethod={spreadMethod}\n    >\n      {gradientStops.map((stopProps, key) => (\n        <GradientStop\n          key={stopProps.offset != null ? stopProps.offset : key}\n          {...stopProps}\n        />\n      ))}\n    </radialGradient>\n  );\n};\n\nexport default React.memo(RadialGradient);\n","import * as React from 'react';\n\nimport {\n  GradientColor,\n  SpreadMethod,\n  UnprocessedGradientStops,\n} from './types';\n\nimport { SPREAD_METHOD_PAD } from './constants'\nimport {\n  createAngularGradientPolygons,\n  processStops,\n} from './utils';\n\ninterface Props {\n  angle?: number,\n  from?: GradientColor,\n  id: string,\n  scale?: number,\n  slices?: number,\n  spreadMethod?: SpreadMethod,\n  stops?: UnprocessedGradientStops,\n  to?: GradientColor,\n};\n\nconst AngularGradient = ({\n  angle = 0,\n  from = 'inherit',\n  id,\n  scale = 1,\n  slices = 100,\n  stops,\n  spreadMethod = SPREAD_METHOD_PAD,\n  to = 'inherit',\n}: Props) => {\n  const gradientStops = React.useMemo(\n    () => processStops(stops || ([from, to])),\n    [from, to, stops],\n  );\n  const polygons = React.useMemo(\n    () => createAngularGradientPolygons(angle, gradientStops, scale, spreadMethod, slices),\n    [angle, gradientStops, scale, spreadMethod, slices]\n  );\n\n  return (\n    <pattern\n      height={1}\n      id={id}\n      patternUnits=\"objectBoundingBox\"\n      patternContentUnits=\"objectBoundingBox\"\n      width={1}\n    >\n      {polygons.map(({ key, fill, points }) => (\n        <polygon key={key} fill={fill} points={points} />\n      ))}\n    </pattern>\n  );\n};\n\nexport default React.memo(AngularGradient);\n","import * as React from 'react';\n\ninterface Props {\n  id: string,\n  src?: string\n};\n\nconst BackgroundImage = ({\n  id,\n  src = ''\n}: Props) => (\n  <pattern\n    height={1}\n    id={id}\n    patternContentUnits=\"objectBoundingBox\"\n    patternUnits=\"objectBoundingBox\"\n    width={1}\n  >\n    <image\n      height={1}\n      width={1}\n      x={0}\n      xlinkHref={src}\n      y={0}\n    />\n  </pattern>\n);\n\nexport default React.memo(BackgroundImage);\n","import * as React from 'react';\n\ninterface Props {\n  children?: JSX.Element | JSX.Element[] | ((id: string) => JSX.Element) | null,\n  id: string,\n};\n\nconst CustomSvgPattern = ({\n  children = null,\n  id,\n}: Props) => {\n  return (\n    <pattern\n      height={1}\n      id={id}\n      patternContentUnits=\"objectBoundingBox\"\n      patternUnits=\"objectBoundingBox\"\n      width={1}\n    >\n      {typeof children === 'function' ? children(id) : children}\n    </pattern>\n  );\n};\n\nexport default React.memo(CustomSvgPattern);\n","import * as React from 'react';\n\nfunction needsAnimationHack(UA: string) {\n  return /Safari/.test(UA) && !/Chrome/.test(UA);\n}\n\nconst NoopAnimationHack = () => {\n  const UA = window.navigator.userAgent;\n  const needsHack = React.useMemo(() => needsAnimationHack(UA), [UA]);\n\n  return !needsHack ? null : (\n    <animateTransform\n      attributeName=\"transform\"\n      attributeType=\"XML\"\n      type=\"translate\"\n      from=\"0, 0\" to=\"0, 0\"\n      dur=\"1s\"\n      repeatCount=\"indefinite\"\n    />\n  );\n};\n\nexport default NoopAnimationHack;\n","import {\n  PatternType,\n  SvgPatternData,\n} from './types';\nimport { sanitizeKey } from './utils';\n\nexport default class SvgPatternManager {\n  private idPrefix: string;\n  private patterns: Map<string, SvgPatternData> = new Map();\n  private listeners: Set<Function> = new Set();\n\n  public constructor(idPrefix = 'svg-pattern') {\n    this.idPrefix = idPrefix;\n  }\n\n  private dispatch() {\n    this.listeners.forEach(listener => {\n      listener();\n    });\n  }\n\n  public subscribe = (listener: Function) => {\n    this.listeners.add(listener);\n    let isSubscribed = true;\n    return () => {\n      if (!isSubscribed) {\n        this.listeners.delete(listener);\n      }\n    };\n  };\n\n  public add = (key: string, type: PatternType, params: {}) => {\n    const patternKey = sanitizeKey(key);\n    const props = params;\n    const id = `${this.idPrefix}-${type}__${patternKey}`;\n    const pattern = { key, id, props, type };\n    this.patterns.set(patternKey, pattern);\n    this.dispatch();\n    return patternKey;\n  };\n\n  public get = (key: string) => {\n    const patternKey = sanitizeKey(key);\n    const pattern = this.patterns.get(patternKey);\n    return pattern ? `url(#${pattern.id})`: null;\n  };\n\n  public has = (key: string) => {\n    return this.patterns.has(sanitizeKey(key));\n  };\n\n  public remove = (key: string) => {\n    const patternKey = sanitizeKey(key);\n    if (this.patterns.has(patternKey)) {\n      this.patterns.delete(patternKey);\n      this.dispatch();\n    }\n  }\n\n  public getPatterns = () => {\n    const patterns: { [key:string]: SvgPatternData } = {};\n    for (let [key, pattern] of this.patterns.entries()) {\n      patterns[key] = pattern;\n    }\n    return patterns;\n  };\n}\n","import * as React from 'react';\n\nimport { SvgPatterns } from './types';\n\nimport {\n  PATTERN_TYPE_ANGULAR_GRADIENT,\n  PATTERN_TYPE_CUSTOM,\n  PATTERN_TYPE_IMAGE,\n  PATTERN_TYPE_LINEAR_GRADIENT,\n  PATTERN_TYPE_RADIAL_GRADIENT,\n} from './constants';\n\nimport LinearGradient from './LinearGradient';\nimport RadialGradient from './RadialGradient';\nimport AngularGradient from './AngularGradient';\nimport BackgroundImage from './BackgroundImage';\nimport CustomSvgPattern from './CustomSvgPattern';\n\ninterface Props {\n  patterns?: SvgPatterns,\n  noSvgWrapper?: boolean,\n};\n\nconst SvgPatternLibrary = ({\n  patterns = {},\n  noSvgWrapper = false,\n}: Props) => {\n  const renderedPatterns = React.useMemo(\n    () => Object.entries(patterns as SvgPatterns)\n      .map(([key, { id, props, type }]) => {\n        switch (type) {\n          case PATTERN_TYPE_LINEAR_GRADIENT:\n            return (\n              <LinearGradient key={key} id={id} {...props} />\n            );\n          case PATTERN_TYPE_RADIAL_GRADIENT:\n            return (\n              <RadialGradient key={key} id={id} {...props} />\n            );\n          case PATTERN_TYPE_ANGULAR_GRADIENT:\n            return (\n              <AngularGradient key={key} id={id} {...props} />\n            );\n          case PATTERN_TYPE_IMAGE:\n            return (\n              <BackgroundImage key={key} id={id} {...props} />\n            );\n          case PATTERN_TYPE_CUSTOM:\n            return (\n              <CustomSvgPattern key={key} id={id} {...props} />\n            );\n          default:\n            return null;\n        }\n      }),\n    [patterns]\n  );\n\n  if (noSvgWrapper) {\n    return (\n      <>\n        {renderedPatterns}\n      </>\n    );\n  }\n\n  return (\n    <svg\n      style={{\n        bottom: 0,\n        height: 1,\n        opacity: 0,\n        pointerEvents: 'none',\n        position: 'fixed',\n        right: 0,\n        width: 1,\n        zIndex: -1\n      }}\n    >\n      {renderedPatterns}\n    </svg>\n  );\n};\n\nexport default React.memo(SvgPatternLibrary);\n","import React, {\n  useCallback,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { NoopAnimationHack } from 'react-svg-patterns';\n\nconst SvgPatternPreview = ({ ...props }) => {\n  const localPatternId = useMemo(() => `pattern-${Math.random().toString().substr(2)}`, []);\n  const [local, setLocal] = useState(false);\n  const handleClick = useCallback(() => {\n    setLocal(value => !value);\n  }, []);\n\n  return (\n    <svg\n      height={100}\n      onClick={handleClick}\n      preserveAspectRatio=\"none\"\n      viewBox=\"0 0 100 100\"\n      width={100}\n      {...props}\n    >\n      {!local ? null : (\n        <defs>\n          <pattern\n            id={localPatternId}\n            x={0}\n            y={0}\n            width=\"100%\"\n            height=\"100%\"\n            patternUnits=\"userSpaceOnUse\"\n            patternContentUnits=\"userSpaceOnUse\"\n          >\n            <rect fill=\"inherit\" x={0} y={0} width=\"100%\" height=\"100%\" />\n          </pattern>\n        </defs>\n      )}\n      <NoopAnimationHack />\n      <g fill={!local ? 'inherit' : `url(#${localPatternId})`}>\n        <rect x={5} y={5} width={90} height={90} />\n      </g>\n    </svg>\n  );\n}\n\nexport default SvgPatternPreview;\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\nimport JSON5 from 'json5';\nimport rehype from 'rehype-dom';\n\nimport AceEditor from 'react-ace';\n\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/mode-svg';\nimport 'ace-builds/src-noconflict/theme-eclipse';\n\nimport SvgPatternPreview from './SvgPatternPreview';\n\nconst EXAMPLE_KEYS = [\n  'linear',\n  'radial',\n  'angular',\n  'image',\n  'custom',\n];\nconst EXAMPLE_TYPE = EXAMPLE_KEYS[Math.floor(Math.random() * EXAMPLE_KEYS.length)];\nconst EXAMPLE_LABELS = {\n  linear: 'Linear Gradient',\n  radial: 'Radial Gradient',\n  angular: 'Angular Gradient',\n  image: 'Background Image',\n  custom: 'Custom',\n};\nconst EXAMPLE_OPTIONS = {\n  linear: {\n    from: '#009999',\n    to: '#cc3366',\n    angle: 90,\n  },\n  radial: {\n    r: 0.71,\n    stops: [\n      // center\n      { offset: 0, color: '#330000' },\n      { offset: 0.23, color: '#110000' },\n      // ring\n      { offset: 0.24, color: '#cc6600' },\n      { offset: 0.27, color: '#993300' },\n      { offset: 0.34, color: '#660000' },\n      //\n      { offset: 0.35, color: '#cc6600' },\n      { offset: 0.40, color: '#993300' },\n      { offset: 0.47, color: '#660000' },\n      //\n      { offset: 0.48, color: '#cc6600' },\n      { offset: 0.55, color: '#993300' },\n      { offset: 0.64, color: '#660000' },\n      //\n      { offset: 0.65, color: '#cc6600' },\n      { offset: 0.74, color: '#993300' },\n      { offset: 0.84, color: '#660000' },\n      //\n      { offset: 0.85, color: '#cc6600' },\n      { offset: 0.91, color: '#993300' },\n      { offset: 1, color: '#660000' },\n    ],\n  },\n  angular: {\n    slices: 200,\n    stops: ['#ff0000', '#ffff00', '#00ff00', '#00ffff', '#0000ff', '#ff00ff', '#ff0000'],\n  },\n  image: {\n    src: 'https://via.placeholder.com/150',\n  },\n  custom: `<g transform=\"translate(0.5, 0.5) scale(1.42) rotate(-45) translate(-0.5, -0.5)\">\n  <g>\n    <animateTransform attributeName=\"transform\" attributeType=\"XML\" type=\"translate\" from=\"0, 0\" to=\"0, -1\" dur=\"5s\" repeatCount=\"indefinite\" />\n    <rect fill=\"#FD5068\" x=\"0\" y=\"0\" width=\"1\" height=\"1\" />\n    <rect fill=\"#FC9B27\" x=\"0\" y=\"0.167\" width=\"1\" height=\"1\" />\n    <rect fill=\"#FFDE4B\" x=\"0\" y=\"0.333\" width=\"1\" height=\"1\" />\n    <rect fill=\"#3CCE9E\" x=\"0\" y=\"0.5\" width=\"1\" height=\"1\" />\n    <rect fill=\"#429AEA\" x=\"0\" y=\"0.666\" width=\"1\" height=\"1\" />\n    <rect fill=\"#7366D3\" x=\"0\" y=\"0.833\" width=\"1\" height=\"1\" />\n    <rect fill=\"#FD5068\" x=\"0\" y=\"1\" width=\"1\" height=\"1\" />\n    <rect fill=\"#FC9B27\" x=\"0\" y=\"1.167\" width=\"1\" height=\"1\" />\n    <rect fill=\"#FFDE4B\" x=\"0\" y=\"1.333\" width=\"1\" height=\"1\" />\n    <rect fill=\"#3CCE9E\" x=\"0\" y=\"1.5\" width=\"1\" height=\"1\" />\n    <rect fill=\"#429AEA\" x=\"0\" y=\"1.666\" width=\"1\" height=\"1\" />\n    <rect fill=\"#7366D3\" x=\"0\" y=\"1.833\" width=\"1\" height=\"1\" />\n  </g>\n</g>\n`,\n};\n\nfunction unwrapSvgElement() {\n  function findSvgElement(node) {\n    if (node.type === 'element' && node.tagName === 'svg') {\n      return node;\n    }\n    return node.children && node.children.find(childNode => findSvgElement(childNode));\n  }\n\n  function findSvgRoot(node) {\n    const svgElement = node && findSvgElement(node);\n    return !svgElement ? node : {\n      type: 'root',\n      children: svgElement.children,\n    };\n  }\n\n  return node => findSvgRoot(node);\n}\n\nfunction evaluateWithId(id) {\n  // Janky security...hopefully nobody wants to self-XSS\n  const globals = {\n    window: {},\n    document: {},\n    globalThis: {},\n    console: {},\n    alert: () => undefined,\n    fetch: () => undefined,\n    XMLHttpRequest: undefined,\n  };\n  const globalKeys = Object.keys(globals);\n  const globalValues = globalKeys.map(key => globals[key]);\n  function processExpression(expression) {\n    if (!expression.trim()) {\n      return undefined;\n    }\n    try {\n      // eslint-disable-next-line no-new-func\n      const expressionFn = new Function(['id', ...globalKeys], `return (${expression});`);\n      const result = expressionFn(id, ...globalValues);\n      return result.toString();\n    } catch (e) {\n      console.error('failed to evaluate expression:', expression);\n      console.error(e);\n      return expression;\n    }\n  }\n\n  function processValue(value, key) {\n    const [, expression] = value.match(/^\\{(.*)\\}$/) || [value, undefined];\n    return expression == null ? value : processExpression(expression);\n  }\n\n  function processNode(srcNode) {\n    if (!srcNode) {\n      return srcNode;\n    }\n    const node = { ...srcNode };\n    if (node.children) {\n      node.children = srcNode.children.map(childNode => processNode(childNode));\n    }\n    if (node.properties) {\n      node.properties = {};\n      Object.entries(srcNode.properties).forEach(([key, value]) => {\n        node.properties[key] = processValue(value, key);\n      });\n    }\n    if (node.type === 'text') {\n      node.value = processValue(node.value);\n    }\n    return node;\n  }\n\n  return node => processNode(node);\n}\n\nconst createSvgGroup = (value, id) => {\n  window.lastValue = value;\n  let processedValue;\n  try {\n    processedValue = rehype()\n      .use(unwrapSvgElement)\n      .use(evaluateWithId, id)\n      .processSync(`<svg>${value}</svg>`)\n      .toString();\n  } catch (e) {\n    processedValue = value;\n  }\n  return (\n    <g dangerouslySetInnerHTML={{ __html: processedValue }} />\n  );\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_TYPE': {\n      const type = action.payload;\n      const exampleOptions = EXAMPLE_OPTIONS[type];\n      const options = typeof exampleOptions === 'string'\n        ? { children: id => createSvgGroup(exampleOptions, id), }\n        : exampleOptions;\n      const optionsValue = typeof exampleOptions === 'string'\n        ? exampleOptions\n        : JSON5.stringify(exampleOptions, null, 2) + '\\n';\n      return { ...state, type, options, optionsValue };\n      }\n\n    case 'SET_OPTIONS_VALUE': {\n      const optionsValue = action.payload;\n      try {\n        const options = state.type === 'custom'\n          ? { children: id => createSvgGroup(optionsValue, id) }\n          : JSON5.parse(optionsValue);\n        return { ...state, options, optionsValue };\n      } catch (e) {\n        return { ...state, optionsValue };\n      }\n    }\n\n    default:\n      return state;\n  }\n}\n\nconst DemoPatternEditor = ({\n  className,\n  onSetPatternId,\n  patternKey = 'demo',\n  registerSvgPattern,\n}) => {\n  const [{\n    type,\n    optionsValue,\n    options,\n  }, dispatch] = useReducer(reducer, {\n    type: EXAMPLE_TYPE,\n    options: typeof EXAMPLE_OPTIONS[EXAMPLE_TYPE] === 'string'\n      ? { children: id => createSvgGroup(EXAMPLE_OPTIONS[EXAMPLE_TYPE], id), }\n      : EXAMPLE_OPTIONS[EXAMPLE_TYPE],\n    optionsValue: typeof EXAMPLE_OPTIONS[EXAMPLE_TYPE] === 'string'\n      ? EXAMPLE_OPTIONS[EXAMPLE_TYPE]\n      : JSON5.stringify(EXAMPLE_OPTIONS[EXAMPLE_TYPE], null, 2) + '\\n',\n  })\n  const [fill, setFill] = useState('');\n\n  const codeSample = useMemo(() => {\n    const typeString = JSON5.stringify(type);\n    let optionsString;\n    if (type === 'custom') {\n      optionsString = `{\n  children: id => (\n    <g>\n${optionsValue.split('\\n').map(line => `      ${line}`).join('\\n')}\n    </g>\n  )\n}`;\n    } else {\n      try {\n        optionsString = JSON5.stringify(options, null, 2);\n      } catch (e) {\n        optionsString = '';\n      }\n    }\n\n    return `// Example Usage\nimport { createManagedSvgPatternLibrary } from 'react-svg-patterns';\n\nconst {\n  ManagedSvgPatternLibrary,\n  registerSvgPattern,\n} = createManagedSvgPatternLibrary();\n\n// Register pattern\nconst yourPatternId = registerSvgPattern('yourPatternKey', ${typeString}, ${optionsString});\n\n// Use pattern as a fill in a component\nconst YourSvgComponent = (...props) => (\n  <svg fill={yourPatternId} {...props}>\n    {/* shapes, etc. */}\n  </svg>\n);\n\n// Render ManagedSvgPatternLibrary component in your app\nconst YourApp = () => (\n  <>\n    <div>\n      <YourSvgComponent />\n    </div>\n    <ManagedSvgPatternLibrary />\n  </>\n);\n`;\n  }, [type, options, optionsValue])\n\n  const handleTypeChange = useCallback((e, value = e.currentTarget.value) => {\n    dispatch({ type: 'SET_TYPE', payload: value });\n  }, []);\n\n  const handleOptionsEditorChange = useCallback((value) => {\n    dispatch({ type: 'SET_OPTIONS_VALUE', payload: value });\n  }, []);\n\n  useEffect(() => {\n    const patternId = registerSvgPattern(patternKey, type, options);\n    setFill(patternId);\n    if (onSetPatternId) {\n      onSetPatternId(patternId);\n    }\n  }, [onSetPatternId, patternKey, registerSvgPattern, type, options]);\n\n  const aceTheme = 'eclipse';\n  const aceEditorProps = useMemo(() => ({\n    $blockScrolling: true,\n  }), []);\n  const aceOptions = useMemo(() => ({\n    showLineNumbers: false,\n    tabSize: 2,\n    showPrintMargin: false,\n    useSoftTabs: true,\n    useWorker: false,\n  }), []);\n\n  return (\n    <div className={className}>\n      <div className=\"typeSelect\">\n        <label>Type</label>\n        <select onChange={handleTypeChange} value={type}>\n          {EXAMPLE_KEYS.map(key => (\n            <option key={key} value={key}>{EXAMPLE_LABELS[key] || key}</option>\n          ))}\n        </select>\n      </div>\n      <div className=\"optionsEditor\">\n        <AceEditor\n          editorProps={aceEditorProps}\n          height=\"100%\"\n          mode={type === 'custom' ? 'svg' : 'javascript'}\n          name=\"patternOptions\"\n          onChange={handleOptionsEditorChange}\n          setOptions={aceOptions}\n          theme={aceTheme}\n          value={optionsValue}\n          width=\"100%\"\n        />\n      </div>\n      <div className=\"patternPreview\">\n        <SvgPatternPreview fill={fill} preserveAspectRatio=\"none\" />\n      </div>\n      <div className=\"codeSample\">\n        <AceEditor\n          editorProps={aceEditorProps}\n          mode=\"javascript\"\n          name=\"sampleCode\"\n          height=\"100%\"\n          readOnly\n          setOptions={aceOptions}\n          theme={aceTheme}\n          value={codeSample}\n          width=\"100%\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default styled(DemoPatternEditor)`\n  display: grid;\n  grid-template-rows: min-content 0.5fr 0.5fr;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 1px;\n  background-color: #9f9f9f;\n  border-top: 1px solid #9f9f9f;\n  border-bottom: 1px solid #9f9f9f;\n\n  .typeSelect {\n    display: flex;\n    position: relative;\n    grid-row: 1 / 2;\n    grid-column: 1 / 2;\n\n    > label {\n      padding: 10px 20px;\n      color: #9f9f9f;\n      background-color: #e8e8e8;\n      border-right: 1px solid #9f9f9f;\n    }\n\n    > select {\n      appearance: none;\n      display: block;\n      width: 100%;\n      height: 100%;\n      padding: 10px 20px;\n      box-sizing: border-box;\n      outline: 0;\n      border: 0;\n      border-radius: 0;\n      background-color: #fff;\n      color: inherit;\n      font: inherit;\n      cursor: pointer;\n\n      &:focus {\n        background-color: #e8f2fd;\n      }\n    }\n\n    &::after {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      padding: 10px;\n      pointer-events: none;\n      color: #9f9f9f;\n      content: '▾';\n    }\n  }\n\n  .optionsEditor {\n    grid-row: 2 / -2;\n    grid-column: 1 / 2;\n    height: 100%;\n  }\n\n  .patternPreview {\n    grid-row: 1 / -2;\n    grid-column: 2 / 3;\n    background-color: #fff;\n\n    > svg {\n      display: block;\n      width: 100%;\n      min-height: 100%;\n    }\n  }\n\n  .codeSample {\n    grid-row: -2 / -1;\n    grid-column: 1 / -1;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst GithubCorner = ({\n  backgroundFill = '#151513',\n  className,\n  foregroundFill = '#fff',\n  height = 80,\n  width = 80,\n}) => (\n  <svg\n    className={className}\n    fill={backgroundFill}\n    height={height}\n    viewBox=\"0 0 250 250\"\n    width={width}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M0 0l115 115h15l12 27 108 108V0z\" />\n    <g className=\"octocat\" fill={foregroundFill}>\n      <path className=\"octocat-arm\" d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\" style={{ transformOrigin: '130px 106px' }} />\n      <path className=\"octocat-body\" d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\" />\n    </g>\n  </svg>\n);\n\nexport default styled(GithubCorner)`\n  &:hover {\n    .octocat-arm {\n      animation: octocat-wave 560ms ease-in-out;\n    };\n  }\n\n  @keyframes octocat-wave {\n    0%, 100% {\n      transform: rotate(0);\n    }\n\n    20%, 60% {\n      transform: rotate(-25deg);\n    }\n\n    40%, 80% {\n      transform: rotate(10deg);\n    }\n  }\n\n  @media (max-width: 500px) {\n    .octocat-arm {\n      animation: octocat-wave 560ms ease-in-out;\n    }\n\n    &:hover .octocat-arm {\n      animation: none\n    }\n  }\n`;\n","import React, {\n  useCallback,\n  useState,\n} from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nimport {\n  VERSION,\n  createManagedSvgPatternLibrary,\n} from 'react-svg-patterns';\n\nimport DemoPatternEditor from './DemoPatternEditor';\nimport GithubCorner from './GithubCorner';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  html,\n  body {\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    font-family: sans-serif;\n    color: #000;\n    background-color: #fff;\n  }\n\n  a {\n    color: #36f;\n\n    &:hover {\n      color: #69f;\n    }\n\n    &:active {\n      color: #69f;\n    }\n  }\n`;\n\nconst {\n  ManagedSvgPatternLibrary,\n  registerSvgPattern,\n} = createManagedSvgPatternLibrary();\n\nconst App = ({ className }) => {\n  const [fill, setFill] = useState();\n  const handleSetPatternId = useCallback((patternId) => {\n    setFill(patternId);\n  }, []);\n\n  return (\n    <>\n      <GlobalStyle />\n      <div className={className}>\n        <main>\n          <header>\n            <h1>React SVG Pattern Manager</h1>\n            <p>Create, manage, and use SVG patterns in your React components!</p>\n          </header>\n          <DemoPatternEditor\n            onSetPatternId={handleSetPatternId}\n            patternKey=\"demo\"\n            registerSvgPattern={registerSvgPattern}\n          />\n          <footer>\n            <p>\n              <code>\n                <a href=\"https://www.npmjs.com/package/react-svg-patterns\" target=\"_blank\">react-svg-patterns</a>\n                {`@${VERSION}`}\n              </code>\n            </p>\n            <p>© 2019 <a href=\"https://mcknig.ht\" target=\"_blank\">Keith McKnight</a></p>\n          </footer>\n        </main>\n        <aside>\n          <a href=\"https://github.com/kmck/react-svg-patterns\" target=\"_blank\">\n            <GithubCorner backgroundFill={fill} />\n          </a>\n        </aside>\n      </div>\n      <ManagedSvgPatternLibrary idPrefix=\"libraryDemo\" />\n    </>\n  );\n};\n\nexport default styled(App)`\n  main {\n    display: grid;\n    grid-template-rows: min-content auto min-content;\n    width: 100vw;\n    min-height: 100vh;\n  }\n\n  header {\n    padding: 20px 80px 20px 34px;\n    min-height: 100px;\n    box-sizing: border-box;\n  }\n\n  h1 {\n    font-weight: bold;\n    font-size: 2rem;\n    margin-bottom: 10px;\n  }\n\n  code {\n    font-family: monospace;\n  }\n\n  aside {\n    position: fixed;\n    top: 0;\n    right: 0;\n\n    a,\n    svg {\n      display: block;\n    }\n  }\n\n  footer {\n    padding: 20px 34px;\n    font-size: 0.8rem;\n    text-align: center;\n    box-sizing: border-box;\n  }\n\n  p:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;","import * as React from 'react';\n\nimport { PatternType } from './types';\n\nimport SvgPatternLibrary from './SvgPatternLibrary';\nimport SvgPatternManager from './SvgPatternManager';\n\ninterface Props {\n  noSvgWrapper?: boolean,\n};\n\nexport default function createManagedSvgPatternLibrary(\n  patternManagerOrId?: string | SvgPatternManager\n) {\n  const patternManager = (patternManagerOrId as any) instanceof SvgPatternManager\n    ? patternManagerOrId as SvgPatternManager\n    : new SvgPatternManager(patternManagerOrId as string);\n  const ManagedSvgPatternLibrary = (props: Props) => {\n    const [patterns, setPatterns] = React.useState(patternManager.getPatterns());\n\n    React.useEffect(() => {\n      setPatterns(patternManager.getPatterns());\n\n      const unsubscribe = patternManager.subscribe(() => {\n        setPatterns(patternManager.getPatterns());\n      });\n\n      return () => {\n        unsubscribe();\n      };\n    }, []);\n\n    return (\n      <SvgPatternLibrary\n        patterns={patterns}\n        {...props}\n      />\n    );\n  };\n\n  return {\n    ManagedSvgPatternLibrary,\n    getSvgPattern(key: string) {\n      return patternManager.get(key);\n    },\n    registerSvgPattern(key: string, type: PatternType, params: Object) {\n      return patternManager.get(patternManager.add(key, type, params));\n    }\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}